---
---
<style>
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;600&display=swap');

nav {
  background-color: white;
  padding: 1rem 1.5rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-family: 'Roboto', sans-serif;
  font-size: 1rem;
  position: relative;
  z-index: 100;
  overflow: visible;
}

/* Brand bilingual title */
.brand {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 0.4rem;
  color: #800000;
  text-decoration: none;
  font-weight: 600;
}

.brand-separator {
  color: black;
  font-weight: 400;
  opacity: 0.7;
}

.brand-ru {
  color: #4d4d4d;
  font-weight: 600;
}

/* Hide Russian on mobile */
@media (max-width: 768px) {
  .brand-ru,
  .brand-separator {
    display: none;
  }
}

/* Hamburger menu */
.hamburger {
  display: none;
  flex-direction: column;
  gap: 4px;
  cursor: pointer;
}

.hamburger div {
  width: 25px;
  height: 3px;
  background-color: #800000;
  border-radius: 2px;
  transition: all 0.3s ease;
}

.hamburger.active div:nth-child(1) {
  transform: rotate(45deg) translate(5px, 5px);
}
.hamburger.active div:nth-child(2) {
  opacity: 0;
}
.hamburger.active div:nth-child(3) {
  transform: rotate(-45deg) translate(7px, -6px);
}

/* Mobile dropdown */
.mobile-panel {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background-color: #800000;
  color: white;
  overflow: hidden;
  max-height: 0;
  transition: max-height 0.3s ease;
  box-shadow: 0 4px 12px rgba(0,0,0,0.25);
  display: flex;
  flex-direction: column;
}
.mobile-panel.show {
  max-height: 300px;
}
.mobile-panel a {
  color: white;
  text-decoration: none;
  font-weight: 600;
  padding: 1rem 1.5rem;
}
.mobile-panel a:hover {
  background-color: #6b0000;
}

/* Language toggle */
.language-toggle {
  display: flex;
  align-items: center;
  position: relative;
  overflow: visible;
}
.toggle-button {
  background-color: white;
  border: 1px solid #ccc;
  border-radius: 6px;
  padding: 0.4rem 0.8rem;
  font-weight: 600;
  cursor: pointer;
}
.language-menu {
  display: none;
  position: fixed;
  background: white;
  color: black;
  border: 2px solid red;
  padding: 1rem;
  z-index: 99999;
  border-radius: 6px;
  min-width: 140px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.3);
  flex-direction: column;
  overflow: visible;
}
.language-menu.show-menu {
  display: flex !important;
}
.language-menu div {
  padding: 0.75rem 1rem;
  cursor: pointer;
  border-bottom: 1px solid #eee;
  font-size: 0.9rem;
  white-space: nowrap;
  transition: background-color 0.2s ease;
  color: black !important;
  display: block !important;
  background: white;
}
.language-menu div:first-child {
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
}
.language-menu div:last-child {
  border-bottom: none;
  border-bottom-left-radius: 6px;
  border-bottom-right-radius: 6px;
}
.language-menu div:hover {
  background-color: #f8f9fa;
}

/* Mobile styling */
@media (max-width: 768px) {
  nav {
    padding: 1rem;
  }
  .brand {
    font-size: 0.9rem;
    flex: 1;
    margin-left: 1rem;
  }
  .hamburger {
    display: flex;
    padding: 0.5rem;
    border-radius: 4px;
    transition: background-color 0.2s ease;
    order: -1;
  }
  .hamburger:hover {
    background-color: rgba(128, 0, 0, 0.1);
  }
  .hamburger:active {
    background-color: rgba(128, 0, 0, 0.2);
  }
  .language-toggle {
    margin-left: 0.5rem;
  }
  .toggle-button {
    font-size: 0.9rem;
    padding: 0.3rem 0.6rem;
  }
}
</style>

<nav>
  <!-- Hamburger -->
  <div class="hamburger" id="hamburger">
    <div></div>
    <div></div>
    <div></div>
  </div>

  <!-- Brand bilingual -->
  <a href="/" class="brand">
    <span class="brand-en">Archive of Soviet Trumpet Music</span>
    <span class="brand-separator">|</span>
    <span class="brand-ru">–ê—Ä—Ö–∏–≤ —Å–æ–≤–µ—Ç—Å–∫–æ–π —Ç—Ä—É–±–Ω–æ–π –º—É–∑—ã–∫–∏</span>
  </a>

  <!-- Language toggle -->
  <div class="language-toggle" id="langToggle">
    <button class="toggle-button" id="toggleButton" data-lang-toggle>EN</button>
    <div class="language-menu" id="langMenu">
      <div data-lang="EN">üá¨üáß English</div>
      <div data-lang="RU">üá∑üá∫ –†—É—Å—Å–∫–∏–π</div>
      <div data-lang="DE">üá©üá™ Deutsch</div>
    </div>
  </div>

  <!-- Mobile dropdown -->
  <div class="mobile-panel" id="mobilePanel">
    <a href="/" data-translate="nav.home">Home</a>
    <a href="/about" data-translate="nav.about">About</a>
    <a href="/submit" data-translate="nav.submit">Submit</a>
    <a href="/sources" data-translate="nav.sources">Sources</a>
  </div>
</nav>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const hamburger = document.getElementById('hamburger');
  const mobilePanel = document.getElementById('mobilePanel');
  const toggleButton = document.getElementById('toggleButton');
  const menu = document.getElementById('langMenu');

  // Hamburger menu toggle
  hamburger?.addEventListener('click', (e) => {
    e.stopPropagation();
    mobilePanel.classList.toggle('show');
    hamburger.classList.toggle('active');
  });

  document.addEventListener('click', (e) => {
    if (!mobilePanel.contains(e.target) && !hamburger.contains(e.target)) {
      mobilePanel.classList.remove('show');
      hamburger.classList.remove('active');
    }
  });

  // Close menu when link clicked
  mobilePanel.querySelectorAll('a').forEach(link => {
    link.addEventListener('click', () => {
      mobilePanel.classList.remove('show');
      hamburger.classList.remove('active');
    });
  });

  // Language dropdown
  toggleButton?.addEventListener('click', (e) => {
    e.stopPropagation();
    console.log('Toggle button clicked, current menu classes:', menu.className);
    console.log('Menu children count:', menu.children.length);
    console.log('Menu innerHTML:', menu.innerHTML);
    
    // Position the dropdown relative to the toggle button
    const rect = toggleButton.getBoundingClientRect();
    menu.style.top = (rect.bottom + 8) + 'px';
    menu.style.right = (window.innerWidth - rect.right) + 'px';
    
    console.log('Toggle button position:', rect);
    menu.classList.toggle('show-menu');
    console.log('After toggle, menu classes:', menu.className);
    if (menu.classList.contains('show-menu')) {
      console.log('Menu positioned at top:', menu.style.top, 'right:', menu.style.right);
      console.log('Menu z-index:', getComputedStyle(menu).zIndex);
    }
  });

  menu?.querySelectorAll('div').forEach(item => {
    item.addEventListener('click', () => {
      const selectedLang = item.dataset.lang.toLowerCase();
      console.log('Language menu item clicked:', selectedLang);
      
      // Wait for LanguageManager if it's not ready yet
      const switchLanguage = () => {
        if (window.LanguageManager) {
          console.log('Using LanguageManager to switch to:', selectedLang);
          window.LanguageManager.switchLanguage(selectedLang);
        } else {
          console.log('LanguageManager not available, using fallback');
          toggleButton.textContent = item.dataset.lang;
        }
      };
      
      // Try immediately, or wait a bit if LanguageManager isn't ready
      if (window.LanguageManager) {
        switchLanguage();
      } else {
        setTimeout(switchLanguage, 200);
      }
      
      menu.classList.remove('show-menu');
    });
  });

  document.addEventListener('click', () => menu.classList.remove('show-menu'));

  // Make toggleLang available globally for testing
  window.toggleLang = (lang) => {
    if (window.LanguageManager) {
      console.log('toggleLang called with:', lang);
      window.LanguageManager.switchLanguage(lang.toLowerCase());
    } else {
      console.log('LanguageManager not available yet');
    }
  };

  // Add function to reset language to English default
  window.resetLanguage = () => {
    localStorage.removeItem('selectedLanguage');
    if (window.LanguageManager) {
      window.LanguageManager.switchLanguage('en');
      console.log('Language reset to English default');
    }
  };
  
  console.log("Lang toggle script loaded:", typeof window.toggleLang);
});
</script>
