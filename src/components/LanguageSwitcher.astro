---
// Language switcher component for managing language state
const currentLang = Astro.url.searchParams.get('lang') || 'en';
---

<script is:inline>
  // Language management functions
  window.LanguageManager = {
    currentLang: 'en',
    
    // Initialize language from localStorage or URL param
    init() {
      const urlLang = new URLSearchParams(window.location.search).get('lang');
      const storedLang = localStorage.getItem('selectedLanguage');
      
      // Priority: URL parameter > stored language > English default
      this.currentLang = urlLang || storedLang || 'en';
      
      // Ensure we always have a valid language (en, de, or ru)
      if (!['en', 'de', 'ru'].includes(this.currentLang)) {
        this.currentLang = 'en';
      }
      
      // Store the current language in localStorage for persistence
      localStorage.setItem('selectedLanguage', this.currentLang);
      
      console.log('LanguageManager initializing with:', this.currentLang);
      console.log('Language stored in localStorage:', localStorage.getItem('selectedLanguage'));
      
      // Update UI based on current language
      this.applyLanguage(this.currentLang);
      
      // Update language toggle button
      const toggleButton = document.getElementById('toggleButton');
      if (toggleButton) {
        toggleButton.textContent = this.currentLang.toUpperCase();
        console.log('Updated toggle button to:', this.currentLang.toUpperCase());
      } else {
        console.log('Toggle button not found during init');
      }
      
      console.log('Language initialized:', this.currentLang);
      
      // Set up mutation observer to handle dynamically added content
      this.setupMutationObserver();
    },
    
    // Set up observer to translate newly added elements
    setupMutationObserver() {
      const observer = new MutationObserver((mutations) => {
        let shouldRetranslate = false;
        mutations.forEach((mutation) => {
          if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {
            // Check if any added nodes contain translatable elements
            mutation.addedNodes.forEach((node) => {
              if (node.nodeType === Node.ELEMENT_NODE) {
                const hasTranslateElements = node.querySelector && (
                  node.querySelector('[data-translate]') || 
                  node.matches && node.matches('[data-translate]')
                );
                if (hasTranslateElements) {
                  shouldRetranslate = true;
                }
              }
            });
          }
        });
        
        if (shouldRetranslate) {
          console.log('New translatable content detected, retranslating...');
          this.applyLanguage(this.currentLang);
        }
      });
      
      observer.observe(document.body, {
        childList: true,
        subtree: true
      });
    },
    
    // Switch to a new language
    switchLanguage(newLang) {
      console.log('Switching language from', this.currentLang, 'to', newLang);
      this.currentLang = newLang;
      localStorage.setItem('selectedLanguage', newLang);
      console.log('Language saved to localStorage:', newLang);
      
      // Update URL without reload
      const url = new URL(window.location);
      url.searchParams.set('lang', newLang);
      window.history.replaceState({}, '', url);
      
      // Apply the new language
      this.applyLanguage(newLang);
      
      // Update toggle button
      const toggleButton = document.getElementById('toggleButton');
      if (toggleButton) {
        toggleButton.textContent = newLang.toUpperCase();
        console.log('Updated toggle button to:', newLang.toUpperCase());
      } else {
        console.log('Toggle button not found during switch');
      }
      
      console.log('Language switched to:', newLang);
    },
    
    // Apply language to all elements with data-lang attributes
    applyLanguage(lang) {
      console.log('Applying language:', lang);
      
      // Hide all language-specific elements
      const langElements = document.querySelectorAll('[data-lang]');
      console.log('Found', langElements.length, 'elements with data-lang attribute');
      langElements.forEach(el => {
        el.style.display = 'none';
      });
      
      // Show elements for current language
      const currentLangElements = document.querySelectorAll(`[data-lang="${lang}"]`);
      console.log('Found', currentLangElements.length, 'elements for language', lang);
      currentLangElements.forEach(el => {
        el.style.display = 'block';
      });
      
      // Update text content for elements with language keys
      const translateElements = document.querySelectorAll('[data-translate]');
      console.log('Found', translateElements.length, 'elements to translate');
      translateElements.forEach(el => {
        const key = el.getAttribute('data-translate');
        const translation = this.getTranslation(key, lang);
        if (translation) {
          console.log('Translating', key, 'to:', translation);
          el.textContent = translation;
        } else {
          console.log('No translation found for key:', key);
        }
      });
      
      // Update placeholders
      const placeholderElements = document.querySelectorAll('[data-translate-placeholder]');
      console.log('Found', placeholderElements.length, 'placeholder elements to translate');
      placeholderElements.forEach(el => {
        const key = el.getAttribute('data-translate-placeholder');
        const translation = this.getTranslation(key, lang);
        if (translation) {
          console.log('Translating placeholder', key, 'to:', translation);
          el.placeholder = translation;
        }
      });
      
      // Update document language attribute
      document.documentElement.lang = lang === 'en' ? 'en' : lang === 'de' ? 'de' : 'ru';
      console.log('Set document language to:', document.documentElement.lang);
      
      // Dispatch language change event for other components
      document.dispatchEvent(new CustomEvent('languageChanged', { detail: { lang } }));
      
      // Force retranslation of composer details if they exist
      this.translateComposerDetails(lang);
    },
    
    // Translate composer detail panel specifically
    translateComposerDetails(lang) {
      // Translate country values
      const countryElements = document.querySelectorAll('.country-value');
      countryElements.forEach(el => {
        const country = el.getAttribute('data-country');
        if (country && country !== "—" && country !== "") {
          const countryMap = {
            'Russia': 'country.russia',
            'Ukraine': 'country.ukraine', 
            'Armenia': 'country.armenia',
            'Georgia': 'country.georgia',
            'Azerbaijan': 'country.azerbaijan',
            'Uzbekistan': 'country.uzbekistan',
            'Latvia': 'country.latvia',
            'Estonia': 'country.estonia',
            'Lithuania': 'country.lithuania',
            'Belarus': 'country.belarus',
            'Moldova': 'country.moldova',
            'Kyrgyzstan': 'country.kyrgyzstan',
            'Tajikistan': 'country.tajikistan',
            'Turkmenistan': 'country.turkmenistan',
            'Kazakhstan': 'country.kazakhstan'
          };
          
          const countryKey = countryMap[country];
          if (countryKey) {
            const translation = this.getTranslation(countryKey, lang);
            if (translation && translation !== countryKey) {
              el.textContent = translation;
            }
          }
        }
      });
      
      // Translate republic values
      const republicElements = document.querySelectorAll('.republic-value');
      republicElements.forEach(el => {
        const republic = el.getAttribute('data-republic');
        if (republic) {
          const republicMap = {
            'Armenian SSR': 'republic.armenian',
            'Azerbaijan SSR': 'republic.azerbaijan',
            'Byelorussian SSR': 'republic.byelorussian',
            'Estonian SSR': 'republic.estonian',
            'Georgian SSR': 'republic.georgian',
            'Kazakh SSR': 'republic.kazakh',
            'Kirghiz SSR': 'republic.kirghiz',
            'Latvian SSR': 'republic.latvian',
            'Lithuanian SSR': 'republic.lithuanian',
            'Moldavian SSR': 'republic.moldavian',
            'Russian SFSR': 'republic.russian',
            'Tajik SSR': 'republic.tajik',
            'Turkmen SSR': 'republic.turkmen',
            'Ukrainian SSR': 'republic.ukrainian',
            'Uzbek SSR': 'republic.uzbek'
          };
          
          const republicKey = republicMap[republic];
          if (republicKey) {
            const translation = this.getTranslation(republicKey, lang);
            if (translation && translation !== republicKey) {
              el.textContent = translation;
            }
          }
        }
      });
      
      // Translate gender values
      const genderElements = document.querySelectorAll('.gender-value');
      genderElements.forEach(el => {
        const gender = el.getAttribute('data-gender');
        if (gender && gender !== "—" && gender !== "") {
          const genderMap = {
            'Male': 'filter.male',
            'Female': 'filter.female'
          };
          
          const genderKey = genderMap[gender];
          if (genderKey) {
            const translation = this.getTranslation(genderKey, lang);
            if (translation && translation !== genderKey) {
              el.textContent = translation;
            }
          }
        }
      });
      
      // Update native language labels using German/Russian columns
      const nativeLanguageElements = document.querySelectorAll('.native-language-label');
      console.log('Found native language elements:', nativeLanguageElements.length);
      nativeLanguageElements.forEach(el => {
        const englishName = el.dataset.language || '';
        const germanName = el.dataset.sprache || '';
        const russianName = el.dataset.yazyk || '';
        console.log('Native language data - EN:', englishName, 'DE:', germanName, 'RU:', russianName);
        
        let languageName = '';
        if (lang === 'de' && germanName) {
          languageName = germanName; // German from Sprache column
          console.log('Using German language name:', languageName);
        } else if (lang === 'ru' && russianName) {
          languageName = russianName; // Russian from язык column
          console.log('Using Russian language name:', languageName);
        } else if (englishName) {
          languageName = englishName; // English fallback from Language column
          console.log('Using English language name:', languageName);
        }
        
        if (languageName) {
          console.log('Setting native language label to:', languageName);
          el.textContent = languageName;
        }
      });
    },
    
    // Get translation for a key
    getTranslation(key, lang = this.currentLang) {
      const translations = {
        en: {
          'search.placeholder': 'Search for a composer...',
          'search.button': 'Search',
          'search.showAll': 'Show All',
          'nav.home': 'Home',
          'nav.about': 'About', 
          'nav.sources': 'Sources',
          'nav.submit': 'Submit',
          'nav.brand.primary': 'Archive of Soviet Trumpet Music',
          'nav.brand.secondary': 'Архив советской музыки для трубы',
          'filter.title': 'Filters',
          'filter.country': 'Country',
          'filter.republic': 'Soviet Republic',
          'filter.decade': 'Decade',
          'filter.pieceType': 'Type of Piece',
          'filter.type': 'Type',
          'filter.gender': 'Gender',
          'filter.instrumentation': 'Instrumentation',
          'filter.male': 'Male',
          'filter.female': 'Female',
          'filter.unaccompanied': 'Unaccompanied',
          'filter.trumpetPiano': 'Trumpet and piano',
          'filter.trumpetOrchestra': 'Trumpet and orchestra',
          'filter.trumpetDuet': 'Trumpet duet',
          'filter.mixedEnsemble': 'Mixed ensemble',
          'filter.scherzo': 'Scherzo',
          'filter.cornetSolo': 'Cornet solo',
          'filter.sonata': 'Sonata/Sonatina',
          'filter.concerto': 'Concerto/Concertino',
          'filter.poem': 'Poem',
          'filter.concertPiece': 'Concert Piece',
          'filter.fantasy': 'Fantasy/variations',
          'country.armenia': 'Armenia',
          'country.russia': 'Russia',
          'country.ukraine': 'Ukraine',
          'country.georgia': 'Georgia',
          'country.azerbaijan': 'Azerbaijan',
          'country.uzbekistan': 'Uzbekistan',
          'country.latvia': 'Latvia',
          'country.estonia': 'Estonia',
          'country.lithuania': 'Lithuania',
          'country.belarus': 'Belarus',
          'country.moldova': 'Moldova',
          'country.kyrgyzstan': 'Kyrgyzstan',
          'country.tajikistan': 'Tajikistan',
          'country.turkmenistan': 'Turkmenistan',
          'country.kazakhstan': 'Kazakhstan',
          'republic.armenian': 'Armenian SSR',
          'republic.azerbaijan': 'Azerbaijan SSR',
          'republic.byelorussian': 'Byelorussian SSR',
          'republic.estonian': 'Estonian SSR',
          'republic.georgian': 'Georgian SSR',
          'republic.kazakh': 'Kazakh SSR',
          'republic.kirghiz': 'Kirghiz SSR',
          'republic.latvian': 'Latvian SSR',
          'republic.lithuanian': 'Lithuanian SSR',
          'republic.moldavian': 'Moldavian SSR',
          'republic.russian': 'Russian SFSR',
          'republic.tajik': 'Tajik SSR',
          'republic.turkmen': 'Turkmen SSR',
          'republic.ukrainian': 'Ukrainian SSR',
          'republic.uzbek': 'Uzbek SSR',
          'composer.additionalInfo': 'Additional Info',
          'composer.russian': 'Russian',
          'composer.english': 'English',
          'composer.native': 'Native Language',
          'composer.country': 'Country',
          'composer.republic': 'Soviet Republic', 
          'composer.gender': 'Gender',
          'composer.notes': 'Notes',
          'composer.select': 'Select a piece or composer to see details here.',
          'results.title': 'Results',
          'results.noResults': 'No music found for selected filters.',
          'results.helpExpand': 'You can help by expanding it',
          'composer.details': 'Additional Info',
          'composer.select': 'Select a piece or composer to see more details here.',
          'footer.archive': 'Archive of Soviet Trumpet Music',
          'footer.copyright': '© 2025 Archive of Soviet Trumpet Music',
          'footer.description': 'Trumpet music from the October Revolution to the Fall of the USSR',
          'about.title': 'About the Archive of Soviet Trumpet Music',
          'about.description': 'The Archive of Soviet Trumpet Music is intended to index and document music from the former Soviet republics. This website is currently in development, and additional features and information will become available soon.',
          'about.upcoming': 'Upcoming Features',
          'about.upcoming.composers': 'Composer information — names, nationalities, and dates',
          'about.upcoming.compositions': 'Composition titles and basic catalog details',
          'about.upcoming.sources': 'Expanded information about sources and archives',
          'about.upcoming.links': 'Links to public-domain scores and library holdings (when available)',
          'about.upcoming.languages': 'Language options, including Russian',
          'about.upcoming.instrumentation': 'Adding more music to the "Instrumentation" filter category',
          'about.contributions': 'Contributions',
          'about.contributions.description': 'In the future, users will be able to submit new sources and compositions to the archive. If you have materials you\'d like to contribute, please check back soon or reach out to Emily Nastelin directly.',
          'about.technical': 'Technical Information',
          'about.technical.description': 'This archive is built using modern web technologies, ensuring a responsive and user-friendly experience. Accessibility and clarity are priorities, and we aim to make the content available to a diverse audience. All graphics and web layouts are original creations of Emily Nastelin.',
          'about.signature': '— Emily Nastelin',
          'sources.title': 'Sources & References',
          'sources.thanks': 'Special Thanks',
          'sources.thanks.alex': 'Thank you to Alex Dzord for double-checking the Russian and Belarusian transliterations in this archive, ensuring accuracy and authenticity in representing these works.',
          'sources.thanks.neef': 'Vielen Dank an Herrn Neef für die Fotos der Manuskripte von Oskar Böhmes Trompetenduett „Maiglöckchen", damit ich sie sehen und in dieses Archiv aufnehmen konnte.',
          'sources.thanks.sources': 'The following sources were used to locate and verify the music cited in this archive.',
          'sources.bibliography': 'Bibliography',
          'sources.click': 'Click to visit source',
          'submit.title': 'Contribute to the Archive',
          'submit.description': 'Help us preserve and expand the Archive of Soviet Trumpet Music. Whether you have scores, recordings, research materials, or corrections to suggest, your contributions help make this resource more complete and valuable.',
          'submit.materials': 'Submit Materials',
          'submit.name': 'Your Name',
          'submit.email': 'Email Address',
          'submit.type': 'Type of Material',
          'submit.type.select': 'Please select a type',
          'submit.type.score': 'Music Score',
          'submit.type.recording': 'Recording',
          'submit.type.research': 'Research / Academic Article',
          'submit.type.correction': 'Correction / Update',
          'submit.type.biographical': 'Biographical Information',
          'submit.type.other': 'Other',
          'submit.description': 'Description & Details',
          'submit.file': 'Upload File (optional)',
          'submit.file.formats': 'Accepted formats: PDF, images, audio files, documents (max 10MB)',
          'submit.button': 'Submit Contribution',
          'submit.placeholder.name': 'Enter your full name',
          'submit.placeholder.email': 'your.email@example.com',
          'submit.placeholder.description': 'Please provide details about the material you\'re submitting. Include composer names, piece titles, dates, sources, and any other relevant information...'
        },
        de: {
          'search.placeholder': 'Nach einem Komponisten suchen...',
          'search.button': 'Suchen',
          'search.showAll': 'Alle anzeigen',
          'nav.home': 'Startseite',
          'nav.about': 'Über uns',
          'nav.sources': 'Quellen',
          'nav.submit': 'Beitragen',
          'nav.brand.primary': 'Archiv Sowjetischer Trompetenmusik',
          'nav.brand.secondary': 'Архив советской музыки для трубы',
          'filter.title': 'Filter',
          'filter.country': 'Land',
          'filter.republic': 'Sowjetrepublik',
          'filter.decade': 'Jahrzehnt',
          'filter.pieceType': 'Stücktyp',
          'filter.type': 'Typ',
          'filter.gender': 'Geschlecht',
          'filter.instrumentation': 'Instrumentierung',
          'filter.male': 'Männlich',
          'filter.female': 'Weiblich',
          'filter.unaccompanied': 'Unbegleitet',
          'filter.trumpetPiano': 'Trompete und Klavier',
          'filter.trumpetOrchestra': 'Trompete und Orchester',
          'filter.trumpetDuet': 'Trompeten-Duett',
          'filter.mixedEnsemble': 'Gemischtes Ensemble',
          'filter.scherzo': 'Scherzo',
          'filter.cornetSolo': 'Kornett-Solo',
          'filter.sonata': 'Sonate/Sonatine',
          'filter.concerto': 'Konzert/Concertino',
          'filter.poem': 'Poem',
          'filter.concertPiece': 'Konzertstück',
          'filter.fantasy': 'Fantasie/Variationen',
          'country.armenia': 'Armenien',
          'country.russia': 'Russland',
          'country.ukraine': 'Ukraine',
          'country.georgia': 'Georgien',
          'country.azerbaijan': 'Aserbaidschan',
          'country.uzbekistan': 'Usbekistan',
          'country.latvia': 'Lettland',
          'country.estonia': 'Estland',
          'country.lithuania': 'Litauen',
          'country.belarus': 'Belarus',
          'country.moldova': 'Moldau',
          'country.kyrgyzstan': 'Kirgisistan',
          'country.tajikistan': 'Tadschikistan',
          'country.turkmenistan': 'Turkmenistan',
          'country.kazakhstan': 'Kasachstan',
          'republic.armenian': 'Armenische SSR',
          'republic.azerbaijan': 'Aserbaidschanische SSR',
          'republic.byelorussian': 'Weißrussische SSR',
          'republic.estonian': 'Estnische SSR',
          'republic.georgian': 'Georgische SSR',
          'republic.kazakh': 'Kasachische SSR',
          'republic.kirghiz': 'Kirgisische SSR',
          'republic.latvian': 'Lettische SSR',
          'republic.lithuanian': 'Litauische SSR',
          'republic.moldavian': 'Moldauische SSR',
          'republic.russian': 'Russische SFSR',
          'republic.tajik': 'Tadschikische SSR',
          'republic.turkmen': 'Turkmenische SSR',
          'republic.ukrainian': 'Ukrainische SSR',
          'republic.uzbek': 'Usbekische SSR',
          'composer.additionalInfo': 'Zusätzliche Informationen',
          'composer.russian': 'Russisch',
          'composer.english': 'Englisch',
          'composer.native': 'Muttersprache',
          'composer.country': 'Land',
          'composer.republic': 'Sowjetrepublik',
          'composer.gender': 'Geschlecht',
          'composer.notes': 'Notizen',
          'composer.select': 'Wählen Sie ein Stück oder einen Komponisten aus, um weitere Details zu sehen.',
          'results.title': 'Ergebnisse',
          'results.noResults': 'Keine Musik für die ausgewählten Filter gefunden.',
          'results.helpExpand': 'Sie können helfen, indem Sie es erweitern',
          'composer.details': 'Zusätzliche Informationen',
          'composer.select': 'Wählen Sie ein Stück oder einen Komponisten aus, um weitere Details zu sehen.',
          'footer.archive': 'Archiv der sowjetischen Trompetenmusik',
          'footer.copyright': '© 2025 Archiv der sowjetischen Trompetenmusik',
          'footer.description': 'Trompetenmusik von der Oktoberrevolution bis zum Fall der UdSSR',
          'about.title': 'Über das Archiv der sowjetischen Trompetenmusik',
          'about.description': 'Das Archiv der sowjetischen Trompetenmusik soll Musik aus den ehemaligen Sowjetrepubliken indexieren und dokumentieren. Diese Website befindet sich derzeit in der Entwicklung, und zusätzliche Funktionen und Informationen werden bald verfügbar sein.',
          'about.upcoming': 'Kommende Funktionen',
          'about.upcoming.composers': 'Komponisten-Informationen — Namen, Nationalitäten und Daten',
          'about.upcoming.compositions': 'Kompositionstitel und grundlegende Katalogdetails',
          'about.upcoming.sources': 'Erweiterte Informationen über Quellen und Archive',
          'about.upcoming.links': 'Links zu gemeinfreien Partituren und Bibliotheksbeständen (wenn verfügbar)',
          'about.upcoming.languages': 'Sprachoptionen, einschließlich Russisch',
          'about.upcoming.instrumentation': 'Mehr Musik zur Kategorie "Instrumentation" Filter hinzufügen',
          'about.contributions': 'Beiträge',
          'about.contributions.description': 'In Zukunft werden Nutzer neue Quellen und Kompositionen zum Archiv einreichen können. Wenn Sie Materialien beizutragen haben, schauen Sie bald wieder vorbei oder wenden Sie sich direkt an Emily Nastelin.',
          'about.technical': 'Technische Informationen',
          'about.technical.description': 'Dieses Archiv wurde mit modernen Webtechnologien erstellt und gewährleistet eine responsive und benutzerfreundliche Erfahrung. Zugänglichkeit und Klarheit haben Priorität, und wir streben danach, die Inhalte einem vielfältigen Publikum zur Verfügung zu stellen. Alle Grafiken und Web-Layouts sind originale Kreationen von Emily Nastelin.',
          'about.signature': '— Emily Nastelin',
          'sources.title': 'Quellen & Referenzen',
          'sources.thanks': 'Besonderer Dank',
          'sources.thanks.alex': 'Vielen Dank an Alex Dzord für die Überprüfung der russischen und weißrussischen Transliterationen in diesem Archiv, um Genauigkeit und Authentizität bei der Darstellung dieser Werke zu gewährleisten.',
          'sources.thanks.neef': 'Vielen Dank an Herrn Neef für die Fotos der Manuskripte von Oskar Böhmes Trompetenduett „Maiglöckchen", damit ich sie sehen und in dieses Archiv aufnehmen konnte.',
          'sources.thanks.sources': 'Die folgenden Quellen wurden verwendet, um die in diesem Archiv zitierten Musikstücke zu lokalisieren und zu verifizieren.',
          'sources.bibliography': 'Bibliographie',
          'sources.click': 'Klicken Sie, um die Quelle zu besuchen',
          'submit.title': 'Zum Archiv beitragen',
          'submit.description': 'Helfen Sie uns, das Archiv der sowjetischen Trompetenmusik zu bewahren und zu erweitern. Ob Sie Partituren, Aufnahmen, Forschungsmaterialien oder Korrekturen vorschlagen möchten, Ihre Beiträge machen diese Ressource vollständiger und wertvoller.',
          'submit.materials': 'Materialien einreichen',
          'submit.name': 'Ihr Name',
          'submit.email': 'E-Mail-Adresse',
          'submit.type': 'Art des Materials',
          'submit.type.select': 'Bitte wählen Sie einen Typ',
          'submit.type.score': 'Musikpartitur',
          'submit.type.recording': 'Aufnahme',
          'submit.type.research': 'Forschung / Akademischer Artikel',
          'submit.type.correction': 'Korrektur / Update',
          'submit.type.biographical': 'Biografische Informationen',
          'submit.type.other': 'Sonstiges',
          'submit.description': 'Beschreibung & Details',
          'submit.file': 'Datei hochladen (optional)',
          'submit.file.formats': 'Akzeptierte Formate: PDF, Bilder, Audiodateien, Dokumente (max 10MB)',
          'submit.button': 'Beitrag einreichen',
          'submit.placeholder.name': 'Geben Sie Ihren vollständigen Namen ein',
          'submit.placeholder.email': 'ihre.email@beispiel.com',
          'submit.placeholder.description': 'Bitte geben Sie Details zu dem Material an, das Sie einreichen möchten. Geben Sie Komponistennamen, Stücktitel, Daten, Quellen und andere relevante Informationen an...'
        },
        ru: {
          'search.placeholder': 'Поиск композитора...',
          'search.button': 'Поиск',
          'search.showAll': 'Показать все',
          'nav.home': 'Главная',
          'nav.about': 'О проекте',
          'nav.sources': 'Источники', 
          'nav.submit': 'Добавить',
          'nav.brand.primary': 'Архив советской музыки для трубы',
          'nav.brand.secondary': 'Archive of Soviet Trumpet Music',
          'filter.title': 'Фильтры',
          'filter.country': 'Страна',
          'filter.republic': 'Советская республика',
          'filter.decade': 'Десятилетие',
          'filter.pieceType': 'Тип произведения',
          'filter.type': 'Тип',
          'filter.gender': 'Пол',
          'filter.instrumentation': 'Инструментовка',
          'filter.male': 'Мужской',
          'filter.female': 'Женский',
          'filter.unaccompanied': 'Без сопровождения',
          'filter.trumpetPiano': 'Труба и фортепиано',
          'filter.trumpetOrchestra': 'Труба и оркестр',
          'filter.trumpetDuet': 'Дуэт труб',
          'filter.mixedEnsemble': 'Смешанный ансамбль',
          'filter.scherzo': 'Скерцо',
          'filter.cornetSolo': 'Соло корнета',
          'filter.sonata': 'Соната/Сонатина',
          'filter.concerto': 'Концерт/Концертино',
          'filter.poem': 'Поэма',
          'filter.concertPiece': 'Концертная пьеса',
          'filter.fantasy': 'Фантазия/вариации',
          'country.armenia': 'Армения',
          'country.russia': 'Россия',
          'country.ukraine': 'Украина',
          'country.georgia': 'Грузия',
          'country.azerbaijan': 'Азербайджан',
          'country.uzbekistan': 'Узбекистан',
          'country.latvia': 'Латвия',
          'country.estonia': 'Эстония',
          'country.lithuania': 'Литва',
          'country.belarus': 'Беларусь',
          'country.moldova': 'Молдова',
          'country.kyrgyzstan': 'Кыргызстан',
          'country.tajikistan': 'Таджикистан',
          'country.turkmenistan': 'Туркменистан',
          'country.kazakhstan': 'Казахстан',
          'republic.armenian': 'Армянская ССР',
          'republic.azerbaijan': 'Азербайджанская ССР',
          'republic.byelorussian': 'Белорусская ССР',
          'republic.estonian': 'Эстонская ССР',
          'republic.georgian': 'Грузинская ССР',
          'republic.kazakh': 'Казахская ССР',
          'republic.kirghiz': 'Киргизская ССР',
          'republic.latvian': 'Латвийская ССР',
          'republic.lithuanian': 'Литовская ССР',
          'republic.moldavian': 'Молдавская ССР',
          'republic.russian': 'Российская СФСР',
          'republic.tajik': 'Таджикская ССР',
          'republic.turkmen': 'Туркменская ССР',
          'republic.ukrainian': 'Украинская ССР',
          'republic.uzbek': 'Узбекская ССР',
          'composer.additionalInfo': 'Дополнительная информация',
          'composer.russian': 'Русский',
          'composer.english': 'Английский',
          'composer.native': 'Родной язык',
          'composer.country': 'Страна',
          'composer.republic': 'Советская республика',
          'composer.gender': 'Пол',
          'composer.notes': 'Примечания',
          'composer.select': 'Выберите произведение или композитора, чтобы увидеть подробности.',
          'results.title': 'Результаты',
          'results.noResults': 'Музыка для выбранных фильтров не найдена.',
          'results.helpExpand': 'Вы можете помочь, расширив его',
          'composer.details': 'Дополнительная информация',
          'composer.select': 'Выберите произведение или композитора, чтобы увидеть подробности.',
          'footer.archive': 'Архив советской музыки для трубы',
          'footer.copyright': '© 2025 Архив советской музыки для трубы',
          'footer.description': 'Трубная музыка от Октябрьской революции до распада СССР',
          'about.title': 'Об Архиве советской музыки для трубы',
          'about.description': 'Архив советской музыки для трубы предназначен для индексации и документирования музыки из бывших советских республик. Этот веб-сайт в настоящее время находится в разработке, и дополнительные функции и информация будут доступны в ближайшее время.',
          'about.upcoming': 'Предстоящие функции',
          'about.upcoming.composers': 'Информация о композиторах — имена, национальности и даты',
          'about.upcoming.compositions': 'Названия сочинений и основные каталожные данные',
          'about.upcoming.sources': 'Расширенная информация об источниках и архивах',
          'about.upcoming.links': 'Ссылки на общедоступные партитуры и библиотечные фонды (при наличии)',
          'about.upcoming.languages': 'Языковые опции, включая русский',
          'about.upcoming.instrumentation': 'Добавление музыки в категорию фильтра "Инструментовка"',
          'about.contributions': 'Вклады',
          'about.contributions.description': 'В будущем пользователи смогут добавлять новые источники и сочинения в архив. Если у вас есть материалы, которые вы хотели бы внести, пожалуйста, зайдите снова или обратитесь к Эмили Настелин напрямую.',
          'about.technical': 'Техническая информация',
          'about.technical.description': 'Этот архив построен с использованием современных веб-технологий, обеспечивающих адаптивный и удобный пользовательский опыт. Доступность и ясность являются приоритетами, и мы стремимся сделать контент доступным для разнообразной аудитории. Все графики и веб-макеты являются оригинальными творениями Эмили Настелин.',
          'about.signature': '— Эмили Настелин',
          'sources.title': 'Источники и ссылки',
          'sources.thanks': 'Особая благодарность',
          'sources.thanks.alex': 'Благодарим Алекса Дзорда за проверку русских и белорусских транслитераций в этом архиве, обеспечивая точность и аутентичность в представлении этих произведений.',
          'sources.thanks.neef': 'Vielen Dank an Herrn Neef für die Fotos der Manuskripte von Oskar Böhmes Trompetenduett „Maiglöckchen", damit ich sie sehen und in dieses Archiv aufnehmen konnte.',
          'sources.thanks.sources': 'Следующие источники были использованы для обнаружения и верификации музыки, цитируемой в этом архиве.',
          'sources.bibliography': 'Библиография',
          'sources.click': 'Нажмите, чтобы посетить источник',
          'submit.title': 'Внести вклад в архив',
          'submit.description': 'Помогите нам сохранить и расширить Архив советской музыки для трубы. Независимо от того, есть ли у вас партитуры, записи, исследовательские материалы или предложения по исправлениям, ваш вклад поможет сделать этот ресурс более полным и ценным.',
          'submit.materials': 'Отправить материалы',
          'submit.name': 'Ваше имя',
          'submit.email': 'Адрес электронной почты',
          'submit.type': 'Тип материала',
          'submit.type.select': 'Пожалуйста, выберите тип',
          'submit.type.score': 'Музыкальная партитура',
          'submit.type.recording': 'Запись',
          'submit.type.research': 'Исследование / Научная статья',
          'submit.type.correction': 'Исправление / Обновление',
          'submit.type.biographical': 'Биографическая информация',
          'submit.type.other': 'Другое',
          'submit.description': 'Описание и детали',
          'submit.file': 'Загрузить файл (необязательно)',
          'submit.file.formats': 'Принимаемые форматы: PDF, изображения, аудиофайлы, документы (макс. 10МБ)',
          'submit.button': 'Отправить вклад',
          'submit.placeholder.name': 'Введите ваше полное имя',
          'submit.placeholder.email': 'ваш.email@пример.ru',
          'submit.placeholder.description': 'Пожалуйста, предоставьте детали о материале, который вы отправляете. Включите имена композиторов, названия произведений, даты, источники и любую другую релевантную информацию...'
        }
      };
      
      return translations[lang] && translations[lang][key] || translations.en[key] || key;
    }
  };
  
  // Make LanguageManager available globally immediately
  console.log('LanguageManager script loaded, making globally available');
  
  // Initialize immediately and also when DOM is loaded
  console.log('LanguageManager script loaded');
  
  // Try to initialize immediately if DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      console.log('DOM loaded, initializing LanguageManager');
      window.LanguageManager.init();
    });
  } else {
    // DOM is already ready
    console.log('DOM already ready, initializing LanguageManager immediately');
    setTimeout(() => window.LanguageManager.init(), 100);
  }
</script>